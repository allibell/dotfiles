# .tmux.conf
# See https://fburl.com/tmux for more info.
# set -g default-command "${SHELL}"
set -g history-limit 500000
set -g default-terminal "screen-256color"

# ### Keybinds
# ###########################################################################

# Keybind preference
setw -g mode-keys vi
set-option -g status-keys vi

# Moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Easy split pane commands
# bind = split-window -h
# bind - split-window -v
# unbind-key -T '"' unbind %

# # smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
unbind -n C-j
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
unbind -n C-k
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


# ###########################################################################
# # wincent configs
# ###########################################################################

# Set prefix to space.
unbind C-b
set -g prefix C-Space

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind =
bind = split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle (normally prefix-l).
bind ^space last-window

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Status bar.
set -g status-bg '#48A1F0'
set -g status-fg white
set -g message-bg '#ff575f'
set -g message-fg white
set -g status-left-length 40
set -g status-left '#[fg=blue]#S â§‰ '
set -g status-right "#[fg=white]%H:%M"
set -g status-interval 10 # Default is 15.
#
# # set-option -g status-bg black
# # set-option -g status-fg blue
# # set-option -g status-interval 5
# # set-option -g visual-activity on
# set-window-option -g monitor-activity off
# # set-window-option -g window-status-current-fg white
#
# # Automatically renumber window numbers on closing a pane (tmux >= 1.7).
# set -g renumber-windows on
#
# Highlight active window.
set -w -g window-status-current-bg '#268BD2'

set -g pane-active-border-style bg=default,fg='#268BD2'

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see tmux list-keys and `tmux
# list-keys -t vi-copy`.
set -g mouse on
#
# # Restore pre-2.1 behavior of scrolling with the scrollwheel in Vim, less, copy
# # mode etc, otherwise entering copy mode if not already in it.
# #
#  if in copy mode (pane_in_mode) || using the mouse already (mouse_any_flag)
#    pass through mouse events to current pane (send -Mt=)
#  elsif in alternate screen mode
#    send Up key
#  else
#    enter copy mode (-e exits if we scroll to the bottom)
#  end

#bind-key -T root WheelUpPane \
#  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#    'send -Mt=' \
#    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
#bind-key -T root WheelDownPane \
#  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#    'send -Mt=' \
#    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# Stay in copy mode on drag end, but otherwise exit for mouse up.
# Requires patch from https://github.com/tmux/tmux/issues/326
#bind-key -t vi-copy MouseDragEnd1Pane
#bind-key -t vi-copy MouseUp1Pane cancel

# # For those times when C-c and q are not enough.
# bind-key -t vi-copy Escape cancel
#
# # Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# # line number gutter in Vim + 80 columns of text + 1 column breathing room
# # (default looks to be about 79).
# set -w -g main-pane-width 85
#
# # set -g default-terminal "tmux-256color"
# # set -ga terminal-overrides ',xterm-256color:Tc'
#
# set -g history-limit 262144
#
# # Start window and pane numbering at 1, (0 is too hard to reach).
# set -g base-index 1
# set -g pane-base-index 1
#
# # Don't wait for an escape sequence after seeing C-a.
# set -s escape-time 0
#
# # Dynamically update iTerm tab and window titles.
set -g set-titles on
#
# # Needed as on tmux 1.9 and up (defaults to off).
# # Added in tmux commit c7a121cfc0137c907b7bfb.
# set -g focus-events on
#
# # But don't change tmux's own window titles.
# # set -w -g automatic-rename off
#
# # Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# # position info in copy mode.
set -w -g wrap-search off
#
# # #T      = standard window title (last command, see ~/.bash_profile)
# # #h      = short hostname
# # #S      = session name
# # #W      = tmux window name
# #
# # (Would love to include #(pwd) here as well, but that would only print the
# # current working directory relative to the session -- ie. always the starting
# # cwd -- which is not very interesting).
# set -g set-titles-string "#T : #h > #S > #W"

# # toggle broadcast to all panes
bind * set-window-option synchronize-panes

# clipper
bind-key y run-shell "tmux save-buffer - | nc -N localhost 8377 && echo 'Copied to system clipboard'"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -N localhost 8377 && echo 'Copied to system clipboard'"


# Vim-like key bindings for selection
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection
